students <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
roll_call <- function(class){
print(Sys.Date())
# Use a for loop to print
for (students in roll_call())
print(students)
}
roll_call <- function(class){
print(Sys.Date())
roll_call <- function(class){
print(Sys.Date())
View(roll_call)
View(roll_call)
students <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
print(students)
students <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
students <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
debugSource("~/BootCamp/Lectures_Documents/cu-virt-data-pt-12-2021-u-b/Modules/15-Statistics_R/Monday/02_Stu_RBasics/Unsolved/jr_high_starter.R")
debugSource("~/BootCamp/Lectures_Documents/cu-virt-data-pt-12-2021-u-b/Modules/15-Statistics_R/Monday/02_Stu_RBasics/Unsolved/jr_high_starter.R")
presidents <- c("washington", "adams", "jefferson")
print(presidents)
install.packages("tidyverse")
setwd("~/BootCamp/Modual_15/R_Analysis")
setwd("~/BootCamp/Modual_15/R_Analysis/01_Demo")
x <- 3
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
?read.csv
demo_table <- read.csv(file='demo.csv',check.names = F,stringsAsFactors = F)
View(demo_table)
libary(jsonlite)
library(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json.json')
View(demo_table2)
demo_table[3,"Year"]
demo_table[3,3]
demo_table$"Vehicle_Class"[2]
demo_table$"Vehicle_class"
demo_table$"Vehicle_Class"
filter_table <- demo_table2[demo_table$price > 10000,]
View(filter_table)
View(filter_table)
View(demo_table2)
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
?subset()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$drive == "4wd"),]
View(filter_table3)
?sample()
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
View(demo_table)
View(demo_table)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add MPG to Orginal df
View(demo_table)
View(demo_table)
summarise_demo <- demo_table2 %>% group_by(condition) %>% summarise(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
View(summarise_demo)
summarise(Mean_Mileage(odometer),Maximum_Price=max(price),Num_Vehicles=n())
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
View(summarize_demo)
View(summarize_demo)
?gather()
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value = "Score",buying_price:popularity)
View(long_table)
?spread()
wide_table <- long_table %>% spread(key = "Metric", value = "Score")
View(wide_table)
all.equal(demo_table3,wide_table)
wide_table <- long_table %>% spread(key="Metric", value = "Score")
View(wide_table)
?ggplot()
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
?geom_bar()
mpg_summary <- mpg%>% group_by(manufacturer) %>% summarise(Vehicle_Count=n(), .groups = 'keep') #create summary table
View(mpg_summary)
View(mpg_summary)
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset to ggplot2
plt + geom_col() #plot a bar plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset")
theme(axis.text.x = element_text(angle = 45,hjust = 1))
theme(axis.text.x=element_text(angle=45,hjust=1))
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
View(mpg_summary)
View(mpg_summary)
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)")
plt <- ggplot(mpg,aes(x=displ,y=cty))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vechicle Class")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vechicle Class",shape="Type of Drive")
plt <- ggplot(mpg,aes(x=displ,y=cty,size=class,shape=drv))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", size="Vechicle Class",shape="Type of Drive")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vechicle Class",shape="Type of Drive")
plt <- ggplot(mpg,aes(y=hwy))
ply + geom_boxplot()
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- mpg %>% group_by(class,year) %>% summarise(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_title() +labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)")
plt + geom_title() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)")
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)")
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) + geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarise(Mean_Engine=mean(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class", y="Mean Engine Size")
mpg_summary <- mpg %>% group_by(class) %>% summarise(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,ase(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vechicle Class",y="Mean Engine Size") + geom_errorBar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
plt + geom_point(size=4) + labs(x="Vechicle Class",y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
plt + geom_point(size=4) + labs(x="Vechicle Class",y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty.hwy))
head(mpg_long)
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy))
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt + geom_boxplot() + theme(axis.text.x = element_text(angle = 45,hjust=1))
?facet_wrap()
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + theme(axis.text.x=element_text(angle = 45,hjust=1),legend.position = "none") + xlab("Manufacturer")
